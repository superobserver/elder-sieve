import urllib2
from urllib2 import urlopen
from cookielib import CookieJar
import sys #I am importing the "system" module. I will explain this in greater detail later in this book.
import random #This allows random numbers and other random processes. In my use, it is for making the typed output look more human.
import time #This is for keeping track of time and instituting pauses in typing or code-based events .
import re #This is the "regular expressions" module that is used for discovering patterns and matching strings, etc.
import webbrowser #This allows me to pop open websites on the host computer.
import subprocess
try:
    import talkey
except:
    print "The speech module will not load on your device."
    pass

################################################################################
#This is the function that allows the printing to occur slowly in the terminal #
def slowprint(s):                                                              #
    for c in s + '\n':                                                         #
        sys.stdout.write(c)                                                    #
        sys.stdout.flush() # defeat buffering                                  #
        time.sleep(random.random() * 0.1)                                      #
                                                                               #
slowprint('Hello, user!')                                                      #
################################################################################

slowprint("Do you wish to hear the speech component and/or see the documentation?")
read_var = raw_input("Yes or No>")

if read_var == "yes":
    try:
        tts = talkey.Talkey()
        print "Welcome to the Elder Sieve."
        tts.say("Welcome to the Elder Sieve.")

        print "The simple algebraic relations underlying the sequence generator functions referenced herein are not CURRENTLY detailed in the outputs generated by this program; there are other references provided as links."
        tts.say("The simple algebraic relations underlying the sequence generator functions referenced herein are not CURRENTLY detailed in the outputs generated by this program; there are other references provided as links.")
        
        print "Axiom 1.0, taken from a comment on Sloane's A000040: Reading the primes (excluding 2,3,5) mod 90 divides them into 24 classes, which are described by Sloane's:"
        tts.say("Axiom 1.0, taken from a comment on Sloane's A000040: Reading the primes (excluding 2,3,5) mod 90 divides them into 24 classes, which are described by Sloane's:")

        slowprint("A181732, A195993, A198382, A196000, A201804, A196007, A201734,  A201739, A201819, A201816, A201817, A201818, A202104, A201820, A201822, A201101, A202113, A202105, A202110, A202112, A202129, A202114, A202115 and A202116. - _J. W. Helkenberg_, Jul 24 2013")

        print "Axiom 1.1: Excluding 2,3,5 we see that all base 10 primes have digital root (or, digital sum) 1,2,4,5,7,8 and last digits 1,3,7,9. [Proof by Contradiction]"
        tts.say("Axiom 1.1: Excluding 2,3,5 we see that all base 10 primes have digital root (or, digital sum) 1,2,4,5,7,8 and last digits 1,3,7,9. [Proof by Contradiction]")

        print "To construct sequences that preserve the digital root and last digit of all elements the following axioms must be accepted:"
        tts.say("To construct sequences that preserve the digital root and last digit of all elements the following axioms must be accepted:")

        print "Axiom 1.2: There are 24 primitives that constitute the smallest members of the sequences in Axiom 1.0, given by:"
        tts.say("Axiom 1.2: There are 24 primitives that constitute the smallest members of the sequences in Axiom 1.0, given by:")

        slowprint("7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 49, 53, 59, 61, 67, 71, 73, 77, 79, 83, 89, 91 [Proof by Construction]")

        print "Axiom 1.3: By adding 90 iteratively to any of the numbers listed above, one generates a sequence that contains both composite and prime numbers. [Proof by Construction]"
        tts.say("Axiom 1.3: By adding 90 iteratively to any of the numbers listed above, one generates a sequence that contains both composite and prime numbers. [Proof by Construction]")

        print "Would you like to explore the datasets generated by the functions?"
        tts.say("Would you like to explore the datasets generated by the functions?")

    except:
        slowprint("Welcome to the Elder Sieve.")
        slowprint("The simple algebraic relations underlying the sequence generator functions referenced herein are not CURRENTLY detailed in the outputs generated by this program; there are other references provided as links.")
        slowprint("Axiom 1.0, taken from a comment on Sloane's A000040: Reading the primes (excluding 2,3,5) mod 90 divides them into 24 classes, which are described by Sloane's:")
        slowprint("A181732, A195993, A198382, A196000, A201804, A196007, A201734,  A201739, A201819, A201816, A201817, A201818, A202104, A201820, A201822, A201101, A202113, A202105, A202110, A202112, A202129, A202114, A202115 and A202116. - _J. W. Helkenberg_, Jul 24 2013")
        slowprint("Axiom 1.1: Excluding 2,3,5 we see that all base 10 primes have digital root (or, digital sum) 1,2,4,5,7,8 and last digits 1,3,7,9. [Proof by Contradiction]")
        slowprint("To construct sequences that preserve the digital root and last digit of all elements the following axioms must be accepted:")
        slowprint("Axiom 1.2: There are 24 primitives that constitute the smallest members of the sequences in Axiom 1.0, given by:")
        slowprint("7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 49, 53, 59, 61, 67, 71, 73, 77, 79, 83, 89, 91 [Proof by Construction]")
        slowprint("Axiom 1.3: By adding 90 iteratively to any of the numbers listed above, one generates a sequence that contains both composite and prime numbers. [Proof by Construction]")
        slowprint("Would you like to explore the datasets generated by the functions?")


        #slowprint("This is the Elder Sieve, based on the Book of Revelation.")
        #slowprint("There are 24 elders that sit at the throne, and they can be considered as numbers.")
        #slowprint("The 24 are as follows: 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 49, 53, 59, 61, 67, 71, 73, 77, 79, 83, 89, 91/1")
        #slowprint("The number combination 1 and 91 is special, as this is the alpha and omega of the 24.")
        #slowprint("The operation of the Elder Sieve is as follows: There are 12 or 14 quadratic equations that produce terms. These terms are composite.")
        #slowprint("In fact, the equations will produce ALL composite terms for the class they are operating in, such that any number not produced by the equations is prime.")
        #slowprint("Would you like to explore the prime terms in a given class?")
else:
    pass


proc_var = raw_input("type 'yes' or 'no' to proceed with calculating the prime distribution(s)>")

if proc_var == "yes":
    try:
        print "You have made an excellent choice. The prime numbers are truly fascinating objects."
        tts.say("You have made an excellent choice. The prime numbers are truly fascinating objects.")

        print "You have several options regarding what to explore."
        tts.say("You have several options regarding what to explore.")

        print "You can explore primes, twin primes, cousin primes, sexy primes and prime quadruple (groups of four)"
        tts.say("You can explore primes, twin primes, cousin primes, sexy primes and prime quadruple (groups of four)")
        pass
    except:
        slowprint("You have made an excellent choice. The prime numbers are truly fascinating objects.")
        slowprint("You have several options regarding what to explore.")
        slowprint("You can explore primes, twin primes, cousin primes, sexy primes and prime quadruple (groups of four)")
        pass

new_test_var = raw_input("Please type 'primes', 'twins', 'cousins', 'sexy' or 'quads' >>")


#"Regular Primes" branch
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if new_test_var == "primes":
    new_prime_var = raw_input("please type 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 49, 53, 59, 61, 67, 71, 73, 77, 79, 83, 89, 91 >")
  

######################################
    if new_prime_var == "7":
        #execfile("composite7.py")        #add this line to troubleshoot externally called program
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202110")
            execfile("composite7.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202110"
            execfile("composite7.py")  
######################################
    if new_prime_var == "11":
        #execfile("composite11.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201804")
            execfile("composite11.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201804" 
            execfile("composite11.py") 
######################################
    if new_prime_var == "13":
        #execfile("composite13.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201816")
            execfile("composite13.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201816" 
######################################
    if new_prime_var == "17":
        #execfile("composite17.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202115")
            execfile("composite17.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202115" 
            execfile("composite17.py") 
######################################
    if new_prime_var == "19":
        #execfile("composite19.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A196000")
            execfile("composite19.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A196000"
            execfile("composite19.py")  
######################################
    if new_prime_var == "23":
        #execfile("composite23.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201820")
            execfile("composite23.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201820"
            execfile("composite23.py")   
######################################
    if new_prime_var == "29":
        #execfile("composite29.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201739")
            execfile("composite29.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201739"
            execfile("composite29.py") 
######################################
    if new_prime_var == "31":
        #execfile("composite31.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201739")
            execfile("composite31.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201739"
            execfile("composite31.py") 
######################################
    if new_prime_var == "37":
        #execfile("composite37.py") 
        try:
            webbrowser.get('firefox').open("https://oeis.org/A198382")
            execfile("composite37.py") 
        except:
            print "There will be no link to OEIS. See: https://oeis.org/A198382"
            execfile("composite37.py") 
######################################
    if new_prime_var == "41":
        #execfile("composite41.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202104")
            execfile("composite41.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202104"
            execfile("composite41.py") 
######################################
    if new_prime_var == "43":
        #execfile("composite43.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202105")
            execfile("composite43.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202105"
            execfile("composite43.py") 
######################################
    if new_prime_var == "47":
        #execfile("composite47.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201734")
            execfile("composite47.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201734"
            execfile("composite47.py") 
#####################################
    if new_prime_var == "49":
        #execfile("composite49.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201818")
            execfile("composite49.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201818"
            execfile("composite49.py")
#####################################
    if new_prime_var == "53":
        #execfile("composite53.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202114")
            execfile("composite53.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202114"
            execfile("composite53.py")
####################################
    if new_prime_var == "59":
        #execfile("composite59.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202101")
            execfile("composite59.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202101"
            execfile("composite59.py")
####################################
    if new_prime_var == "61":
        #execfile("composite61.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202113")
            execfile("composite61.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202113"
            execfile("composite61.py")
#####################################
    if new_prime_var == "67":
        #execfile("composite67.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201817")
            execfile("composite67.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201817"
            execfile("composite67.py")
##################################
    if new_prime_var == "71":
        #execfile("composite71.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202129")
            execfile("composite71.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202129"
            execfile("composite71.py")
##################################
    if new_prime_var == "73":
        #execfile("composite73.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A195993")
            execfile("composite73.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A195993"
            execfile("composite73.py")
##################################
    if new_prime_var == "77":
        #execfile("composite77.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A201822")
            execfile("composite77.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A201822"
            execfile("composite77.py")
##################################
    if new_prime_var == "79":
        #execfile("composite79.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202112")
            execfile("composite79.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202112"
            execfile("composite79.py")
##################################
    if new_prime_var == "83":
        #execfile("composite83.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A196007")
            execfile("composite83.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A196007"
            execfile("composite83.py")
##################################
    if new_prime_var == "89":
        #execfile("composite89.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A202116")
            execfile("composite89.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A202116"
            execfile("composite89.py")
#####################################
    if new_prime_var == "91":
        #execfile("composite91.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A181732")
            execfile("composite91.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A181732"
            execfile("composite91.py")
##################################


#Twin Prime Branch
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if new_test_var == "twins":
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Axiom for Twin Primes
    try:
        print "Axiom 2.0: Excluding 3 and 5, the twin primes can be divided into the following 9 classes: [Proof by Construction]"
        tts.say("Axiom 2.0: Excluding 3 and 5, the twin primes can be divided into the following 9 classes: [Proof by Construction]")
        slowprint("A224855		Numbers n such that 90*n + 17 and 90*n + 19 are twin primes.")
        slowprint("A224856		Numbers n such that 90*n + 29 and 90*n + 31 are twin primes.")
        slowprint("A224859		Numbers n such that 90*n + 47 and 90*n + 49 are twin primes.")
        slowprint("A224854		Numbers n such that 90*n + 11 and 90*n + 13 are twin primes.")
        slowprint("A224857		Numbers n such that 90*n + 41 and 90*n + 43 are twin primes.")
        slowprint("A224860		Numbers n such that 90*n + 59 and 90*n + 61 are twin primes.")
        slowprint("A224862		Numbers n such that 90*n + 71 and 90*n + 73 are twin primes.")
        slowprint("A224864		Numbers n such that 90*n + 77 and 90*n + 79 are twin primes.")
        slowprint("A224865		Numbers n such that 90*n + 89 and 90*n + 91 are twin primes.")
        
        tts.say("Axiom 2.1: Proving that one of the classes contains infinite pairs of twin primes is sufficient for the proof of the Twin Prime Conjecture.")

    except:
        slowprint("Axiom 2.0: Excluding 3 and 5, the twin primes can be divided into the following 9 classes: [Proof by Construction]")

        slowprint("A224855		Numbers n such that 90*n + 17 and 90*n + 19 are twin primes.")
        slowprint("A224856		Numbers n such that 90*n + 29 and 90*n + 31 are twin primes.")
        slowprint("A224859		Numbers n such that 90*n + 47 and 90*n + 49 are twin primes.")
        slowprint("A224854		Numbers n such that 90*n + 11 and 90*n + 13 are twin primes.")
        slowprint("A224857		Numbers n such that 90*n + 41 and 90*n + 43 are twin primes.")
        slowprint("A224860		Numbers n such that 90*n + 59 and 90*n + 61 are twin primes.")
        slowprint("A224862		Numbers n such that 90*n + 71 and 90*n + 73 are twin primes.")
        slowprint("A224864		Numbers n such that 90*n + 77 and 90*n + 79 are twin primes.")
        slowprint("A224865		Numbers n such that 90*n + 89 and 90*n + 91 are twin primes.")
        
        slowprint("Axiom 2.1: Proving that one of the classes contains infinite pairs of twin primes is sufficient for the proof of the Twin Prime Conjecture.")


#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CLOSE AXIOM FOR TWIN PRIMES

    print "There are 9 classes of twin primes."
    new_twin_var = raw_input("To explore twinprime datasets, type '11+13', '17+19', '29+31', '41+43', '47+49', '59+61', '71+73', '77+79', '89+91' >>")

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

######################################
    if new_twin_var == "11+13":
        #execfile("twinprime11_13.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224854")
            execfile("twinprime11_13.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224854"
            execfile("twinprime11_13.py")
######################################
    if new_twin_var == "17+19":
        #execfile("twinprime17_19.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224855")
            execfile("twinprime17_19.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224855"
            execfile("twinprime17_19.py")
######################################
    if new_twin_var == "29+31":
        #execfile("twinprime29_31.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224856")
            execfile("twinprime29_31.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224856"
            execfile("twinprime29_31.py")
######################################
    if new_twin_var == "41+43":
        #execfile("twinprime41_43.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224857")
            execfile("twinprime41_43.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224857"
            execfile("twinprime41_43.py")
######################################
    if new_twin_var == "47+49":
        #execfile("twinprime47_49.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224859")
            execfile("twinprime47_49.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224859"
            execfile("twinprime47_49.py")
######################################
    if new_twin_var == "59+61":
        #execfile("twinprime59_61.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224860")
            execfile("twinprime59_61.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224860"
            execfile("twinprime59_61.py")
######################################
    if new_twin_var == "71+73":
        #execfile("twinprime71_73.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224862")
            execfile("twinprime71_73.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224862"
            execfile("twinprime71_73.py")
#####################################
    if new_twin_var == "77+79":
        #execfile("twinprime77_79.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224864")
            execfile("twinprime77_79.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224864"
            execfile("twinprime77_79.py")
######################################
    if new_twin_var == "89+91":
        #execfile("twinprime89_91.py") 
        try:
            webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("twinprime89_91.py") 
        except:
            print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("twinprime89_91.py")
######################################


#Cousin Prime Branch
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if new_test_var == "cousins":
    try:
        print "Axiom 3.0: Excluding 3, the cousin primes can be divided into the following 9 classes: [Proof by Construction]"
        tts.say("Axiom 3.0: Excluding 3, the cousin primes can be divided into the following 9 classes: [Proof by Construction]")

        slowprint("Numbers n such that 90*n + 7 and 90*n + 11 are cousin primes.")  
        slowprint("Numbers n such that 90*n + 13 and 90*n + 17 are cousin primes.")
        slowprint("Numbers n such that 90*n + 19 and 90*n + 23 are cousin primes.")
        slowprint("Numbers n such that 90*n + 37 and 90*n + 41 are cousin primes.")
        slowprint("Numbers n such that 90*n + 43 and 90*n + 47 are cousin primes.")
        slowprint("Numbers n such that 90*n + 49 and 90*n + 53 are cousin primes.")
        slowprint("Numbers n such that 90*n + 67 and 90*n + 71 are cousin primes.")
        slowprint("Numbers n such that 90*n + 73 and 90*n + 77 are cousin primes.")
        slowprint("Numbers n such that 90*n + 79 and 90*n + 83 are cousin primes.")

        print "Axiom 3.1: Proving that one of the classes contains infinite pairs of cousin primes is sufficient for the proof of the Cousin Prime conjecture."
        tts.say("Axiom 3.1: Proving that one of the classes contains infinite pairs of cousin primes is sufficient for the proof of the Cousin Prime conjecture.")
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CLOSE AXIOM FOR COUSIN PRIME
    except: 
        
        slowprint("Axiom 3.0: Excluding 3, the cousin primes can be divided into the following 9 classes: [Proof by Construction]")

        slowprint("Numbers n such that 90*n + 7 and 90*n + 11 are cousin primes.")  
        slowprint("Numbers n such that 90*n + 13 and 90*n + 17 are cousin primes.")
        slowprint("Numbers n such that 90*n + 19 and 90*n + 23 are cousin primes.")
        slowprint("Numbers n such that 90*n + 37 and 90*n + 41 are cousin primes.")
        slowprint("Numbers n such that 90*n + 43 and 90*n + 47 are cousin primes.")
        slowprint("Numbers n such that 90*n + 49 and 90*n + 53 are cousin primes.")
        slowprint("Numbers n such that 90*n + 67 and 90*n + 71 are cousin primes.")
        slowprint("Numbers n such that 90*n + 73 and 90*n + 77 are cousin primes.")
        slowprint("Numbers n such that 90*n + 79 and 90*n + 83 are cousin primes.")

        slowprint("Axiom 3.1: Proving that one of the classes contains infinite pairs of cousin primes is sufficient for the proof of the Cousin Prime conjecture.")


    print "There are 9 classes of cousin primes."
    new_cousin_var = raw_input("Type '7+11', '13+17', '19+23', '37+41', '43+47', '49+53', '67+71', '73+77', '79+83' >>")

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

######################################
    if new_cousin_var == "7+11":
        #execfile("cousin7_11.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224854")
            execfile("cousin7_11.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224854"
            execfile("cousin7_11.py")
######################################
    if new_cousin_var == "13+17":
        #execfile("cousin13_17.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224855")
            execfile("cousin13_17.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224855"
            execfile("cousin13_17.py")
######################################
    if new_cousin_var == "19+23":
        #execfile("cousin19_23.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224856")
            execfile("cousin19_23.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224856"
            execfile("twinprime29_31.py")
######################################
    if new_cousin_var == "37+41":
        #execfile("cousin37_41.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224857")
            execfile("cousin37_41.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224857"
            execfile("cousin37_41.py")
######################################
    if new_cousin_var == "43+47":
        #execfile("cousin43_47.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224859")
            execfile("cousin43_47.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224859"
            execfile("cousin43_47.py")
######################################
    if new_cousin_var == "49+53":
        #execfile("cousin49_53.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224860")
            execfile("cousin49_53.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224860"
            execfile("cousin49_53.py")
######################################
    if new_cousin_var == "67+71":
        #execfile("cousin67_71.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224862")
            execfile("cousin67_71.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224862"
            execfile("cousin67_71.py")
######################################
    if new_cousin_var == "73+77":
        #execfile("cousin73_77.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224864")
            execfile("cousin73_77.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224864"
            execfile("cousin73_77.py")
######################################
    if new_cousin_var == "79+83":
        #execfile("twinprime89_91.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("cousin79_83.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("cousin79_83.py")
######################################

#Quadruple Prime Branch
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if new_test_var == "quads":
    try:
        print "Axiom 4.0: Excluding 5, the quadruple primes can be divided into the following 3 classes: [Proof by Construction]"
        tts.say("Axiom 4.0: Excluding 5, the quadruple primes can be divided into the following 3 classes: [Proof by Construction]")

        slowprint("Numbers n such that 90*n + 11 and 90*n + 13 and 90*n + 17 and 90*n + 19 are quadruple primes.")  
        slowprint("Numbers n such that 90*n + 41 and 90*n + 43 and 90*n + 47 and 90*n + 49 are quadruple primes.")
        slowprint("Numbers n such that 90*n + 71 and 90*n + 73 and 90*n + 77 and 90*n + 79 are quadruple primes.")
        print "Axiom 4.1: Proving that one of the classes contains infinite numbers of quadruple primes is sufficient for the proof of the Quadruple Prime conjecture."
        tts.say("Axiom 4.1: Proving that one of the classes contains infinite numbers of quadruple primes is sufficient for the proof of the Quadruple Prime conjecture.")

    except:        
        slowprint("Axiom 4.0: Excluding 5, the quadruple primes can be divided into the following 3 classes: [Proof by Construction]")

        slowprint("Numbers n such that 90*n + 11 and 90*n + 13 and 90*n + 17 and 90*n + 19 are quadruple primes.")  
        slowprint("Numbers n such that 90*n + 41 and 90*n + 43 and 90*n + 47 and 90*n + 49 are quadruple primes.")
        slowprint("Numbers n such that 90*n + 71 and 90*n + 73 and 90*n + 77 and 90*n + 79 are quadruple primes.")

        slowprint("Axiom 4.1: Proving that one of the classes contains infinite numbers of quadruple primes is sufficient for the proof of the Quadruple Prime conjecture.")

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CLOSE AXIOM FOR PRIME QUADRUPLES

    print "There are 3 classes of quadruple primes."
    new_quad_var = raw_input("Please type: '11+13+17+19' or '41+43+47+49' or 71+73+77+79' >>")

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
######################################
    if new_quad_var == "11+13+17+19":
        #execfile("quadprime11_13_17_19.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("quadprime11_13_17_19.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("quadprime11_13_17_19.py")
######################################
######################################
    if new_quad_var == "41+43+47+49":
        #execfile("quadprime41_43_47_49.py") 
        try:
           #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("quadprime41_43_47_49.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("quadprime41_43_47_49.py")
######################################

######################################
    if new_quad_var == "71+73+77+79":
        #execfile("quadprime71_73_77_79.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("quadprime71_73_77_79.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("quadprime71_73_77_79.py")
######################################

#Sexy Prime Branch
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
if new_test_var == "sexy":

    #%%%%%%%%%%%%%%%%%%%%%%%Open Sexy Prime Axiom
    try:
        print "Axiom 5.0: The sexy primes can be divided into the following 14 classes: [Proof by Construction]"
        tts.say("Axiom 5.0: The sexy primes can be divided into the following 14 classes: [Proof by Construction]")

        slowprint("Numbers n such that 90*n + 7 and 90*n + 13 are sexy primes.")  
        slowprint("Numbers n such that 90*n + 11 and 90*n + 17 are sexy primes.")
        slowprint("Numbers n such that 90*n + 13 and 90*n + 19 are sexy primes.")
        slowprint("Numbers n such that 90*n + 17 and 90*n + 23 are sexy primes.")
        slowprint("Numbers n such that 90*n + 23 and 90*n + 29 are sexy primes.")
        slowprint("Numbers n such that 90*n + 31 and 90*n + 37 are sexy primes.")
        slowprint("Numbers n such that 90*n + 37 and 90*n + 43 are sexy primes.")
        slowprint("Numbers n such that 90*n + 41 and 90*n + 47 are sexy primes.")
        slowprint("Numbers n such that 90*n + 47 and 90*n + 53 are sexy primes.")  
        slowprint("Numbers n such that 90*n + 53 and 90*n + 59 are sexy primes.")
        slowprint("Numbers n such that 90*n + 61 and 90*n + 67 are sexy primes.")
        slowprint("Numbers n such that 90*n + 67 and 90*n + 73 are sexy primes.")
        slowprint("Numbers n such that 90*n + 73 and 90*n + 79 are sexy primes.")
        slowprint("Numbers n such that 90*n + 83 and 90*n + 89 are sexy primes.")

        print "Axiom 5.1: Proving that one of the classes contains infinite numbers of sexy primes is sufficient for the proof of the Sexy Prime conjecture."
        tts.say("Axiom 5.1: Proving that one of the classes contains infinite numbers of sexy primes is sufficient for the proof of the Sexy Prime conjecture.")

    except:
        slowprint("Axiom 5.0: The sexy primes can be divided into the following 14 classes: [Proof by Construction]")

        slowprint("Numbers n such that 90*n + 7 and 90*n + 13 are sexy primes.")  
        slowprint("Numbers n such that 90*n + 11 and 90*n + 17 are sexy primes.")
        slowprint("Numbers n such that 90*n + 13 and 90*n + 19 are sexy primes.")
        slowprint("Numbers n such that 90*n + 17 and 90*n + 23 are sexy primes.")
        slowprint("Numbers n such that 90*n + 23 and 90*n + 29 are sexy primes.")
        slowprint("Numbers n such that 90*n + 31 and 90*n + 37 are sexy primes.")
        slowprint("Numbers n such that 90*n + 37 and 90*n + 43 are sexy primes.")
        slowprint("Numbers n such that 90*n + 41 and 90*n + 47 are sexy primes.")
        slowprint("Numbers n such that 90*n + 47 and 90*n + 53 are sexy primes.")  
        slowprint("Numbers n such that 90*n + 53 and 90*n + 59 are sexy primes.")
        slowprint("Numbers n such that 90*n + 61 and 90*n + 67 are sexy primes.")
        slowprint("Numbers n such that 90*n + 67 and 90*n + 73 are sexy primes.")
        slowprint("Numbers n such that 90*n + 73 and 90*n + 79 are sexy primes.")
        slowprint("Numbers n such that 90*n + 83 and 90*n + 89 are sexy primes.")
        slowprint("Axiom 5.1: Proving that one of the classes contains infinite numbers of sexy primes is sufficient for the proof of the Sexy Prime conjecture.")

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%CLOSE SEXY PRIME AXIOM

    print "There are 14 classes of sexy primes."
    new_sexy_var = raw_input("Type '7+13', '11+17', '13+19', '17+23', '23+29', '31+37', '37+43', '41+47', '47+53', '53+59', '61+67', '67+73', '73+79', '83+89' >>")

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

######################################
    if new_sexy_var == "7+13":
        #execfile("sexy7_13.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy7_13.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy7_13.py")
######################################

######################################
    if new_sexy_var == "11+17":
        #execfile("sexy11_17.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy11_17.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy11_17.py")
######################################

######################################
    if new_sexy_var == "13+19":
        #execfile("sexy13_19.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy13_19.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy13_19.py")
######################################

######################################
    if new_sexy_var == "17+23":
        #execfile("sexy17_23.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy17_23.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy17_23.py")
######################################

######################################
    if new_sexy_var == "23+29":
        #execfile("sexy23_29.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy23_29.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy23_29.py")
######################################

######################################
    if new_sexy_var == "31+37":
        #execfile("sexy31_37.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy31_37.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy31_37.py")
######################################

######################################
    if new_sexy_var == "37+43":
        #execfile("sexy37_43.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy37_43.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy37_43.py")
######################################

######################################
    if new_sexy_var == "41+47":
        #execfile("sexy41_47.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy41_47.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy41_47.py")
######################################

######################################
    if new_sexy_var == "47+53":
        #execfile("sexy47_53.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy47_53.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy47_53.py")
######################################

######################################
    if new_sexy_var == "53+59":
        #execfile("sexy53_59.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy53_59.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy53_59.py")
######################################

######################################
    if new_sexy_var == "61+67":
        #execfile("sexy61_67.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy61_67.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy61_67.py")
######################################

######################################
    if new_sexy_var == "67+73":
        #execfile("sexy67_73.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy67_73.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy67_73.py")
######################################

######################################
    if new_sexy_var == "73+79":
        #execfile("sexy73_79.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy73_79.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy73_79.py")
######################################

######################################
    if new_sexy_var == "83+89":
        #execfile("sexy83_89.py") 
        try:
            #webbrowser.get('firefox').open("http://oeis.org/A224865")
            execfile("sexy83_89.py") 
        except:
            #print "There will be no link to OEIS. See: http://oeis.org/A224865"
            execfile("sexy83_89.py")
######################################



